server:
  port: 30420
  netty:
    connection-timeout: 60000
spring:
  application:
    name: easy-gateway
  config:
    import:
      - optional:application-redis.yml
  profiles:
    active: dev
  cloud:
    gateway:
      routes:
        - metadata:
            serviceName: 'easy-authorize'
          id: easy-authorize         # 路由ID
          uri: lb://easy-authorize   # 目标服务URI
          predicates:
            - Path=/authorize/**
          filters:
            - StripPrefix=1
        - metadata:
            serviceName: 'easy-services-system'
          id: easy-service-system
          uri: lb://easy-service-system
          predicates:
            - Path=/service-system/**
          filters:
            - StripPrefix=1
        - metadata:
            serviceName: 'easy-services-file'
          id: easy-service-file
          uri: lb://easy-service-file
          predicates:
            - Path=/service-file/**
          filters:
            - StripPrefix=1
    sentinel:
      filter:
        enabled: false

management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always

logging:
  level:
    root: info
  file:
    path: ./logs
  config: classpath:Spring-logback.xml

knife4j:
  # 聚合swagger文档
  gateway:
    enabled: true
    strategy: manual
    discover:
      enabled: true
      oas3:
        url: /v3/api-docs?group=default
      excluded-services:
        - easy-gateway
    routes:
      - name: 认证服务
        # 真实子服务访问url地址-提供OpenAPI的文档
        url: /authorize/v3/api-docs?group=default
        service-name: easy-authorize
        # 路由前缀
        # 兼容OpenAPI3规范在聚合时丢失contextPath属性的异常情况，由开发者自己配置contextPath,Knife4j的前端Ui做兼容处理,与url属性独立不冲突，仅OpenAPI3规范聚合需要，OpenAPI2规范不需要设置此属性,默认为(apiPathPrefix)
        context-path: /authorize
        order: 2
      - name: 系统服务
        url: /service-system/v3/api-docs?group=default
        service-name: easy-service-system
        context-path: /service-system
        order: 3